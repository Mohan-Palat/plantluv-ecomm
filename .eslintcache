[{"/Users/sunitha/plantapp-ecomm/plant-ecomm/src/index.js":"1","/Users/sunitha/plantapp-ecomm/plant-ecomm/src/App.js":"2","/Users/sunitha/plantapp-ecomm/plant-ecomm/src/pages/auth/Login.js":"3","/Users/sunitha/plantapp-ecomm/plant-ecomm/src/pages/auth/Register.js":"4","/Users/sunitha/plantapp-ecomm/plant-ecomm/src/pages/Home.js":"5","/Users/sunitha/plantapp-ecomm/plant-ecomm/src/components/nav/Header.js":"6","/Users/sunitha/plantapp-ecomm/plant-ecomm/src/firebase.js":"7","/Users/sunitha/plantapp-ecomm/plant-ecomm/src/pages/auth/RegisterComplete.js":"8","/Users/sunitha/plantapp-ecomm/plant-ecomm/src/reducers/index.js":"9","/Users/sunitha/plantapp-ecomm/plant-ecomm/src/reducers/userReducer.js":"10","/Users/sunitha/plantapp-ecomm/plant-ecomm/src/pages/auth/ForgotPassword.js":"11"},{"size":580,"mtime":1607545494331,"results":"12","hashOfConfig":"13"},{"size":1454,"mtime":1607649042991,"results":"14","hashOfConfig":"13"},{"size":3406,"mtime":1607794793674,"results":"15","hashOfConfig":"13"},{"size":1300,"mtime":1607556876009,"results":"16","hashOfConfig":"13"},{"size":116,"mtime":1607214718411,"results":"17","hashOfConfig":"13"},{"size":1838,"mtime":1607646335049,"results":"18","hashOfConfig":"13"},{"size":933,"mtime":1607812869514,"results":"19","hashOfConfig":"13"},{"size":2051,"mtime":1607477735616,"results":"20","hashOfConfig":"13"},{"size":178,"mtime":1607486533512,"results":"21","hashOfConfig":"13"},{"size":213,"mtime":1607539304478,"results":"22","hashOfConfig":"13"},{"size":1402,"mtime":1607794788994,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"19lo26g",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},"/Users/sunitha/plantapp-ecomm/plant-ecomm/src/index.js",[],["51","52"],"/Users/sunitha/plantapp-ecomm/plant-ecomm/src/App.js",["53"],"import React, { useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport Login from \"./pages/auth/Login\";\nimport Register from \"./pages/auth/Register\";\nimport Home from \"./pages/Home\";\nimport Header from \"./components/nav/Header\";\nimport RegisterComplete from \"./pages/auth/RegisterComplete\";\nimport ForgotPassword from \"./pages/auth/ForgotPassword\";\n\nimport { auth } from \"./firebase\";\nimport { useDispatch } from \"react-redux\";\n\nconst App = () => {\n\tconst dispatch = useDispatch();\n\n\t// to check firebase auth state\n\tuseEffect( () => {\n\t\tconst unsubscribe = auth.onAuthStateChanged( async ( user ) => {\n\t\t\tif ( user )\n\t\t\t{\n\t\t\t\tconst idTokenResult = await user.getIdTokenResult();\n\t\t\t\tconsole.log( \"user\", user );\n\t\t\t\tdispatch( {\n\t\t\t\t\ttype: \"LOGGED_IN_USER\",\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\temail: user.email,\n\t\t\t\t\t\ttoken: idTokenResult.token,\n\t\t\t\t\t},\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t\t// cleanup\n\t\treturn () => unsubscribe();\n\t}, [] );\n\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\t\t\t<ToastContainer />\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t\t<Route exact path=\"/login\" component={Login} />\n\t\t\t\t<Route exact path=\"/register\" component={Register} />\n\t\t\t\t<Route exact path=\"/register/complete\" component={RegisterComplete} />\n\t\t\t\t<Route exact path=\"/forgot/password\" component={ForgotPassword} />\n\t\t\t</Switch>\n\t\t</>\n\t);\n};\n\nexport default App;\n","/Users/sunitha/plantapp-ecomm/plant-ecomm/src/pages/auth/Login.js",["54","55","56"],"import React, { useState, useEffect } from \"react\";\nimport { auth, googleAuthProvider } from \"../../firebase\";\nimport { toast } from \"react-toastify\";\nimport { Button } from \"antd\";\nimport { MailOutlined, GoogleOutlined, UserAddOutlined } from \"@ant-design/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nconst Login = ( { history } ) => {\n\tconst [ email, setEmail ] = useState( \"\" );\n\tconst [ password, setPassword ] = useState( \"\" );\n\tconst [ loading, setLoading ] = useState( false ); //page laoding message\n\n\tconst { user } = useSelector( ( state ) => ( { ...state } ) );\n\n\tuseEffect( () => {\n\t\tif ( user && user.token ) history.push( \"/\" );\n\t}, [ user ] );\n\n\tlet dispatch = useDispatch();\n\tconst handleSubmit = async ( e ) => {\n\t\te.preventDefault();\n\t\t// console.log(\"ENV --->\", process.env.REACT_APP_REGISTER_REDIRECT_URL);\n\t\tconsole.log( \"email and pwd===>\", email, password )\n\t\t//now page laoding--user clicked the button\n\t\tsetLoading( true )\n\t\ttry\n\t\t{\n\t\t\tconst result = await auth.signInWithEmailAndPassword( email, password )// from firebase\n\n\t\t\tconst { user } = result;\n\n\t\t\tconst idTokenResult = await user.getIdTokenResult();\n\t\t\tdispatch( {\n\t\t\t\ttype: \"LOGGED_IN_USER\",\n\t\t\t\tpayload: {\n\t\t\t\t\temail: user.email,\n\t\t\t\t\ttoken: idTokenResult.token,\n\n\t\t\t\t},\n\t\t\t} );\n\n\t\t\thistory.push( \"/\" );\n\n\t\t}\n\t\tcatch ( e )\n\t\t{\n\t\t\tconsole.log( 'error in logging===>', e )\n\t\t\ttoast.error( e.message );\n\t\t\tsetLoading( false )\n\t\t}\n\n\n\t};\n\n\tconst googleLogin = async () => {\n\t\tauth\n\t\t\t.signInWithPopup( googleAuthProvider )\n\t\t\t.then( async ( result ) => {\n\t\t\t\tconst { user } = result;\n\t\t\t\tconst idTokenResult = await user.getIdTokenResult();\n\t\t\t\tdispatch( {\n\t\t\t\t\ttype: \"LOGGED_IN_USER\",\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\temail: user.email,\n\t\t\t\t\t\ttoken: idTokenResult.token,\n\t\t\t\t\t},\n\t\t\t\t} );\n\t\t\t\thistory.push( \"/\" );\n\t\t\t} )\n\t\t\t.catch( ( err ) => {\n\t\t\t\tconsole.log( err );\n\t\t\t\ttoast.error( err.message );\n\t\t\t} );\n\t};\n\n\n\tconst loginForm = () => (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<div className=\"form-group\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tonChange={( e ) => setEmail( e.target.value )}\n\t\t\t\t\tplaceholder=\" Enter youe Email\"\n\t\t\t\t\tautoFocus\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div className=\"form-group\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tonChange={( e ) => setPassword( e.target.value )}\n\t\t\t\t\tplaceholder=\" Enter your password\"\n\t\t\t\t\tautoFocus\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<br />\n\n\n\t\t\t<Button type=\"submit\"\n\t\t\t\tonClick={handleSubmit}\n\t\t\t\ttype=\"primary\"\n\t\t\t\tclassName=\"mb-3\"\n\t\t\t\tblock shape=\"round\"\n\t\t\t\ticon={<MailOutlined />}\n\t\t\t\tsize=\"large\"\n\t\t\t\tdisabled={!email || password.length < 6}>\n\t\t\t\tLogin with Email and Password\n            </Button>\n\t\t</form>\n\t);\n\n\treturn (\n\t\t<div className=\"container p-5\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-md-6 offset-md-3\">\n\t\t\t\t\t{loading ? (\n\t\t\t\t\t\t<h4 className=\"text-danger\">Loading...</h4>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<h4>Login</h4>\n\t\t\t\t\t\t)}\n\t\t\t\t\t{loginForm()}\n\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={googleLogin}\n\t\t\t\t\t\ttype=\"danger\"\n\t\t\t\t\t\tclassName=\"mb-3\"\n\t\t\t\t\t\tblock\n\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\ticon={<GoogleOutlined />}\n\t\t\t\t\t\tsize=\"large\">\n\t\t\t\t\t\tLogin with Google\n                   </Button>\n\t\t\t\t\t<Link to=\"/forgot/password\" className=\"float-right text-danger\">\n\t\t\t\t\t\tForgot Password\n          </Link>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Login;\n","/Users/sunitha/plantapp-ecomm/plant-ecomm/src/pages/auth/Register.js",[],"/Users/sunitha/plantapp-ecomm/plant-ecomm/src/pages/Home.js",[],"/Users/sunitha/plantapp-ecomm/plant-ecomm/src/components/nav/Header.js",["57"],"import React, { useState } from 'react'\nimport { Menu } from 'antd'\nimport {\n\tAppstoreOutlined,\n\tSettingOutlined,\n\tUserOutlined,\n\tUserAddOutlined,\n\tLogoutOutlined,\n\tHomeOutlined,\n} from \"@ant-design/icons\";\nimport { Link } from 'react-router-dom'\nimport firebase from \"firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nconst { SubMenu, Item } = Menu;\nconst Header = () => {\n\n\tconst [ current, setCurrent ] = useState( 'home' )\n\t//dispatch is a function of the Redux store. \n\t//You call store.dispatch to dispatch an action.T\n\t//his is the only way to trigger a state change.\n\tlet dispatch = useDispatch();\n\n\tlet { user } = useSelector( ( state ) => ( { ...state } ) )\n\tlet history = useHistory();\n\n\tconst handleClick = ( e ) => {\n\t\tconsole.log( e.key )\n\t\tsetCurrent( e.key )\n\n\t}\n\n\tconst logout = () => {\n\t\tfirebase.auth().signOut();\n\t\tdispatch( {\n\t\t\ttype: \"LOGOUT\",\n\t\t\tpayload: null\n\t\t} )\n\t\thistory.push( \"/login\" )\n\t}\n\treturn (\n\t\t<Menu onClick={handleClick} selectedKeys={[ current ]} mode=\"horizontal\">\n\t\t\t<Item key=\"home\" icon={<HomeOutlined />}>\n\t\t\t\t<Link to=\"/\">Home </Link>\n\t\t\t</Item>\n\t\t\t{!user && (\n\t\t\t\t<Item key=\"register\" icon={<UserAddOutlined />} className=\"float-right\">\n\t\t\t\t\t<Link to=\"/register\">Register</Link>\n\t\t\t\t</Item>\n\t\t\t)}\n\n\t\t\t{!user && (\n\t\t\t\t<Item key=\"login\" icon={<UserOutlined />} className=\"float-right\">\n\t\t\t\t\t<Link to=\"/login\">Login </Link>\n\t\t\t\t</Item>\n\t\t\t)}\n\t\t\t{user && (\n\t\t\t\t<SubMenu\n\t\t\t\t\tkey=\"SubMenu\"\n\t\t\t\t\ticon={<SettingOutlined />}\n\t\t\t\t\ttitle={user.email && user.email.split( \"@\" )[ 0 ]}\n\t\t\t\t\tclassName=\"float-right\"\n\t\t\t\t>\n\n\t\t\t\t\t<Item key=\"setting:1\">Option 1</Item>\n\t\t\t\t\t<Item key=\"setting:2\">Option 2</Item>\n\t\t\t\t\t<Item icon={<LogoutOutlined />} onClick={logout}>Log Out </Item>\n\n\t\t\t\t</SubMenu>\n\t\t\t)}\n\t\t</Menu>\n\t);\n\n}\n\n\nexport default Header;","/Users/sunitha/plantapp-ecomm/plant-ecomm/src/firebase.js",[],"/Users/sunitha/plantapp-ecomm/plant-ecomm/src/pages/auth/RegisterComplete.js",[],"/Users/sunitha/plantapp-ecomm/plant-ecomm/src/reducers/index.js",[],"/Users/sunitha/plantapp-ecomm/plant-ecomm/src/reducers/userReducer.js",[],"/Users/sunitha/plantapp-ecomm/plant-ecomm/src/pages/auth/ForgotPassword.js",["58","59"],"import React, { useState, useEffect } from \"react\";\nimport { auth } from \"../../firebase\";\nimport { toast } from \"react-toastify\";\nimport { useSelector } from \"react-redux\";\n\nconst ForgotPassword = ( { history } ) => {\n\tconst [ email, setEmail ] = useState( \"\" );\n\tconst [ loading, setLoading ] = useState( false );\n\n\tconst handleSubmit = async ( e ) => {\n\t\te.preventDefault();\n\t\tsetLoading( true );\n\n\t\tconst config = {\n\t\t\turl: process.env.REACT_APP_FORGOT_PASSWORD_REDIRECT,\n\t\t\thandleCodeInApp: true,\n\t\t}\n\n\t\tawait auth.sendPasswordResetEmail( email, config )\n\t\t\t.then( () => {\n\t\t\t\tsetEmail( \"\" )\n\t\t\t\tsetLoading( false )\n\t\t\t\ttoast.success( \"Check your email for password reset link\" )\n\t\t\t} )\n\t\t\t.catch( ( err ) => {\n\n\t\t\t\tsetLoading( false );\n\t\t\t\ttoast.error( err.message )\n\t\t\t\tconsole.log( \"error in forgot passs====>>>\", err.message )\n\t\t\t} )\n\t}\n\treturn (\n\t\t<div className=\"container col-md-6 offset-md-3 p-5\">\n\t\t\t{loading ? (\n\t\t\t\t<h4 className=\"text-danger\">Loading</h4>\n\t\t\t) : (\n\t\t\t\t\t<h4>Forgot Password</h4>\n\t\t\t\t)}\n\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tonChange={( e ) => setEmail( e.target.value )}\n\t\t\t\t\tplaceholder=\"Type your email\"\n\t\t\t\t\tautoFocus\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<button className=\"btn btn-raised\" disabled={!email}>\n\t\t\t\t\tSubmit\n        </button>\n\t\t\t</form>\n\t\t</div>\n\t);\n\n}\n\n\n\n\n\n\nexport default ForgotPassword;",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":37,"column":5,"nodeType":"66","endLine":37,"endColumn":7,"suggestions":"67"},{"ruleId":"68","severity":1,"message":"69","line":5,"column":40,"nodeType":"70","messageId":"71","endLine":5,"endColumn":55},{"ruleId":"64","severity":1,"message":"72","line":18,"column":5,"nodeType":"66","endLine":18,"endColumn":13,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":107,"column":5,"nodeType":"76","endLine":107,"endColumn":19},{"ruleId":"68","severity":1,"message":"77","line":4,"column":2,"nodeType":"70","messageId":"71","endLine":4,"endColumn":18},{"ruleId":"68","severity":1,"message":"78","line":1,"column":27,"nodeType":"70","messageId":"71","endLine":1,"endColumn":36},{"ruleId":"68","severity":1,"message":"79","line":4,"column":10,"nodeType":"70","messageId":"71","endLine":4,"endColumn":21},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["82"],"no-unused-vars","'UserAddOutlined' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["83"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'AppstoreOutlined' is defined but never used.","'useEffect' is defined but never used.","'useSelector' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},"Update the dependencies array to be: [dispatch]",{"range":"88","text":"89"},"Update the dependencies array to be: [history, user]",{"range":"90","text":"91"},[1035,1037],"[dispatch]",[708,716],"[history, user]"]